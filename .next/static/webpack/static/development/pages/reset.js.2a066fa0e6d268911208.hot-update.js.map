{"version":3,"file":"static/webpack/static/development/pages/reset.js.2a066fa0e6d268911208.hot-update.js","sources":["webpack:///./components/Reset.js"],"sourcesContent":["import React, {Component} from 'react';\nimport {Mutation} from 'react-apollo';\nimport Router from 'next/router';\nimport gql from 'graphql-tag';\nimport Form from './styles/Form';\nimport Error from './ErrorMessage';\nimport PropTypes from 'prop-types';\nimport { CURRENT_USER_QUERY } from './User';\n\nconst RESET_MUTATION = gql`\n    mutation RESET_MUTATION($resetToken: String!, $password: String!, $confirmPassword: String!) {\n        resetPassword(resetToken: $resetToken, password: $password, confirmPassword: $confirmPassword) {\n            id\n            email\n            name\n        }\n    }\n`;\n\nclass RequestReset extends Component {\nstatic propTypes = {\n    resetToken: PropTypes.string.isRequired\n}\n\n  state = {\n    password: '',\n    confirmPassword: ''\n  };\n\n  saveToState = e => {\n    const {name, value, type} = e.target;\n    const val = type === 'checkbox' ? e.target.checked : value;\n    this.setState ({[name]: val});\n  };\n\n  render () {\n    return (\n      <Mutation \n        mutation={RESET_MUTATION} \n        variables={{\n            resetToken: this.props.resetToken,\n            password: this.state.password,\n            confirmPassword: this.state.confirmPassword\n        }}\n        refetchQueries={[{query: CURRENT_USER_QUERY}]}\n        >\n        {(reset, {error, loading}) => {\n          return (\n            <Form method=\"post\" onSubmit={async e => {\n                e.preventDefault();\n                await reset();\n                this.setState({\n                    password: '',\n                    confirmPassword: ''\n                  });\n            }}>\n              <fieldset disabled={loading} aria-busy={loading}>\n\n                <h2>Reset Your Password</h2>\n                <Error error={error} />\n\n                {/* PASSWORD */}\n                <label htmlFor=\"password\">\n                    Password\n                    <input \n                        type=\"password\"\n                        name=\"password\"\n                        value={this.state.password}\n                        onChange={this.saveToState}\n                        required\n                    />\n                </label>\n\n                {/* CONFIRM PASSWORD */}\n                <label htmlFor=\"confirmPassword\">\n                    Confirm Password\n                    <input \n                        type=\"password\"\n                        name=\"confirmPassword\"\n                        value={this.state.confirmPassword}\n                        onChange={this.saveToState}\n                        required\n                    />\n                </label>\n\n                <button type=\"submit\">Reset Your Password</button>\n\n              </fieldset>\n            </Form>\n          )\n        }}\n      </Mutation>\n    );\n  }\n}\n\nexport default RequestReset;\nexport {RESET_MUTATION};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AASA;;;;;;;;;;;;;;;;;;AAKA;AACA;AACA;AAFA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;;;;;;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAGA;AACA;AACA;AAFA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAGA;;;;AA1EA;AACA;AADA;AAEA;AADA;AACA;AA2EA;;;;;A","sourceRoot":""}