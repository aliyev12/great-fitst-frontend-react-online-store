{"version":3,"file":"static/webpack/static/development/pages/permissions.js.6512771e901f929e4800.hot-update.js","sources":["webpack:///./components/Permissions.js"],"sourcesContent":["import {Query, Mutation} from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Error from './ErrorMessage';\nimport Table from './styles/Table';\nimport SickButton from './styles/SickButton';\nimport PropTypes from 'prop-types';\n\nconst possiblePermissions = [\n    'ADMIN',\n    'USER',\n    'ITEMCREATE',\n    'ITEMUPDATE',\n    'ITEMDELETE',\n    'PERMISSIONUPDATE',\n];\n\nconst UPDATE_PERMISSIONS_MUTATION = gql`\n    mutation updatePermissions($permissions: [Permission], $userId: ID!) {\n        updatePermissions(permissions: $permissions, userId: $userId) {\n            id\n            permissions\n            name\n            email\n        }\n    }\n`;\n\nconst ALL_USERS_QUERY = gql`\n    query ALL_USERS_QUERY {\n        users {\n            id\n            name\n            email\n            permissions\n        }\n    }\n`;\n\nconst Permissions = props => (\n    <Query query={ALL_USERS_QUERY}>\n        {({data, loading, error}) => (\n            <div>\n                <Error error={error} />\n                <div>\n                    <h2>Manage Permissions</h2>\n                    <Table>\n                        <thead>\n                            <tr>\n                                <th>Name</th>\n                                <th>Email</th>\n                                {possiblePermissions.map(permission => (\n                                    <th key={permission}>{permission}</th>\n                                ))}\n                                <th>ðŸ‘‡</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {data.users.map(user => (\n                                <UserPermissions key={user.id} user={user} />\n                            ))}\n                        </tbody>\n                    </Table>\n                </div>\n            </div>\n        )}\n    </Query>\n);\n\nclass UserPermissions extends React.Component {\n    static propTypes = {\n        user: PropTypes.shape({\n            name: PropTypes.string,\n            email: PropTypes.string,\n            id: PropTypes.string,\n            permissions: PropTypes.array,\n        }).isRequired,\n    };\n\n    state = {\n        permissions: this.props.user.permissions,\n    };\n    handlePermissionChange = e => {\n        const checkbox = e.target;\n        // Take a copy of the current permissions\n        let updatePermissions = [...this.state.permissions];\n        // Figure out if you need to add or remove a permission\n        if (checkbox.checked) {\n            // Add it in\n            updatePermissions.push(checkbox.value);\n            this.setState({permissions: updatePermissions});\n        } else {\n            updatePermissions = updatePermissions.filter(\n                perm => perm !== checkbox.value\n            );\n            this.setState({permissions: updatePermissions});\n        }\n    };\n    render() {\n        const user = this.props.user;\n        return (\n            <Mutation\n                mutation={UPDATE_PERMISSIONS_MUTATION}\n                variables={{\n                    permissions: this.state.permissions,\n                    userId: this.props.user.id,\n                }}\n            >\n                {(updatePermissions, {loading, error}) => (\n                    <>\n                        {error && (\n                            <tr>\n                                <td colspan=\"8\">\n                                    <Error error={error} />\n                                </td>\n                            </tr>\n                        )}\n                        <tr>\n                            <td>{user.name}</td>\n                            <td>{user.email}</td>\n                            {possiblePermissions.map(permission => (\n                                <td key={permission}>\n                                    <label\n                                        htmlFor={`${\n                                            user.id\n                                        }-permission-${permission}`}\n                                    >\n                                        <input\n                                            id={`${\n                                                user.id\n                                            }-permission-${permission}`}\n                                            type=\"checkbox\"\n                                            checked={this.state.permissions.includes(\n                                                permission\n                                            )}\n                                            value={permission}\n                                            onChange={\n                                                this.handlePermissionChange\n                                            }\n                                        />\n                                    </label>\n                                </td>\n                            ))}\n                            <td>\n                                <SickButton\n                                    type=\"button\"\n                                    disabled={loading}\n                                    onClick={updatePermissions}\n                                >\n                                    UPDATE\n                                </SickButton>\n                            </td>\n                        </tr>\n                    </>\n                )}\n            </Mutation>\n        );\n    }\n}\n\nexport default Permissions;\nexport {ALL_USERS_QUERY};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AASA;AAWA;AACA;AAUA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAjBA;AAFA;AACA;AA6BA;;;;;;;;;;;;;;;;;;AAUA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAGA;AACA;AAGA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;AAuBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AApCA;AAiDA;;;;AAxFA;AACA;AADA;AAEA;AACA;AACA;AACA;AACA;AAJA;AADA;AACA;AAyFA;;;;;A","sourceRoot":""}