{"version":3,"file":"static/webpack/static/development/pages/permissions.js.580368ca2833b737c378.hot-update.js","sources":["webpack:///./components/Permissions.js"],"sourcesContent":["import {Query} from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Error from './ErrorMessage';\nimport Table from './styles/Table';\nimport SickButton from './styles/SickButton';\nimport PropTypes from 'prop-types';\n\nconst possiblePermissions = [\n  'ADMIN',\n  'USER',\n  'ITEMCREATE',\n  'ITEMUPDATE',\n  'ITEMDELETE',\n  'PERMISSIONUPDATE',\n];\n\nconst ALL_USERS_QUERY = gql`\n    query ALL_USERS_QUERY {\n        users {\n            id\n            name\n            email\n            permissions\n        }\n    }\n`;\n\nconst Permissions = props => (\n  <Query query={ALL_USERS_QUERY}>\n    {({data, loading, error}) => (\n      <div>\n        <Error error={error} />\n        <div>\n          <h2>Manage Permissions</h2>\n          <Table>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Email</th>\n                {possiblePermissions.map (permission => (\n                  <th key={permission}>{permission}</th>\n                ))}\n                <th>ðŸ‘‡</th>\n              </tr>\n            </thead>\n            <tbody>\n              {data.users.map (user => (\n                <UserPermissions key={user.id} user={user} />\n              ))}\n            </tbody>\n          </Table>\n        </div>\n      </div>\n    )}\n  </Query>\n);\n\nclass UserPermissions extends React.Component {\n  static propTypes = {\n    user: PropTypes.shape ({\n      name: PropTypes.string,\n      email: PropTypes.string,\n      id: PropTypes.string,\n      permissions: PropTypes.array,\n    }).isRequired,\n  };\n\n  state = {\n    permissions: this.props.user.permissions,\n  };\n  handlePermissionChange = e => {\n    const checkbox = e.target;\n    // Take a copy of the current permissions\n    let updatedPermissions = [...this.state.permissions];\n    // Figure out if you need to add or remove a permission\n    if (checkbox.checked) {\n      // Add it in\n      updatedPermissions.push (checkbox.value);\n      this.setState ({permissions: updatedPermissions});\n    } else {\n        updatedPermissions = updatedPermissions.filter(perm => perm !== checkbox.value);\n        this.setState({ permissions: updatedPermissions });\n    }\n  };\n  render () {\n    const user = this.props.user;\n    return (\n      <tr>\n        <td>{user.name}</td>\n        <td>{user.email}</td>\n        {possiblePermissions.map (permission => (\n          <td key={permission}>\n            <label htmlFor={`${user.id}-permission-${permission}`}>\n              <input\n                type=\"checkbox\"\n                checked={this.state.permissions.includes (permission)}\n                value={permission}\n                onChange={this.handlePermissionChange}\n              />\n            </label>\n          </td>\n        ))}\n        <td>\n          <SickButton>UPDATE</SickButton>\n        </td>\n      </tr>\n    );\n  }\n}\n\nexport default Permissions;\nexport {ALL_USERS_QUERY};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AASA;AACA;AAUA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAjBA;AAFA;AACA;AA6BA;;;;;;;;;;;;;;;;;;AAUA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAlDA;AACA;AADA;AAEA;AACA;AACA;AACA;AACA;AAJA;AADA;AACA;AAmDA;;;;;A","sourceRoot":""}