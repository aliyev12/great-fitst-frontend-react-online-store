{"version":3,"file":"static/webpack/static/development/pages/sell.js.7663cefd6d3d0ecea195.hot-update.js","sources":["webpack:///./components/CreateItem.js"],"sourcesContent":["import React, {Component} from 'react';\nimport {Mutation} from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Form from './styles/Form';\nimport formatMoney from '../lib/formatMoney';\nimport Error from './ErrorMessage';\nimport Router from 'next/router';\n\nconst CREATE_ITEM_MUTATION = gql`\n  mutation CREATE_ITEM_MUTATION(\n    $title: String!\n    $description: String!\n    $price: Int!\n    $image: String\n    $largeImage: String\n  ) {\n    createItem(\n      title: $title\n      description: $description\n      price: $price\n      image: $image\n      largeImage: $largeImage\n    ) {\n      id\n    }\n  }\n`;\n\nclass CreateItem extends Component {\n  state = {\n    formData: {\n      title: 'Cat',\n      description: 'Miao Cat',\n      image: 'miaoaaaa',\n      largeImage: 'large miao',\n      price: 0,\n    },\n    imageLoading: false,\n  };\n\n  handleChange = e => {\n    const {name, type, value} = e.target;\n    const val = type === 'number' ? parseFloat (value) : value;\n    const newFormData = {\n        ...this.state.formData,\n        [name]: val\n    };\n    this.setState ({formData: newFormData});\n  };\n\n  uploadFile = async e => {\n    this.setState ({imageLoading: true});\n    const files = e.target.files;\n    const data = new FormData ();\n    data.append ('file', files[0]);\n    data.append ('upload_preset', 'greatfits');\n\n    const res = await fetch (\n      `https://api.cloudinary.com/v1_1/greatfits/image/upload`,\n      {\n        method: 'POST',\n        body: data,\n      }\n    );\n    const file = await res.json ();\n    const newFormData = {\n      ...this.state.formData,\n      image: file.secure_url,\n      largeImage: file.eager[0].secure_url,\n    };\n    this.setState ({\n        formData: newFormData,\n        imageLoading: false\n    });\n  };\n\n  render () {\n    return (\n      <Mutation mutation={CREATE_ITEM_MUTATION} variables={this.state.formData}>\n        {(createItem, {loading, error}) => (\n          <Form\n            onSubmit={async e => {\n              // Stop the form from submitting\n              // Before submitting, check if image is done uploading because there could\n              //  be a little bit of time when someone uploads a file then immediately\n              // hits enter then its going to send the data.\n              e.preventDefault ();\n              if (!this.state.imageLoading) {\n                // Call the mutation\n                const res = await createItem ();\n                // Change item to the single item page\n                Router.push ({\n                  pathname: '/item',\n                  query: {id: res.data.createItem.id},\n                });\n              }\n            }}\n          >\n            <Error error={error} />\n            <fieldset disabled={loading} aria-busy={loading}>\n              <label htmlFor=\"file\">\n                Image\n                <input\n                  onChange={this.uploadFile}\n                  type=\"file\"\n                  id=\"file\"\n                  name=\"file\"\n                  placeholder=\"Upload an image\"\n                  required\n                />\n                {this.state.image && <img src={this.state.image} alt={this.state.title} />}\n              </label>\n\n              <label htmlFor=\"title\">\n                Title\n                <input\n                  value={this.state.title}\n                  onChange={this.handleChange}\n                  type=\"text\"\n                  id=\"title\"\n                  name=\"title\"\n                  placeholder=\"title\"\n                  required\n                />\n              </label>\n\n              <label htmlFor=\"price\">\n                Price\n                <input\n                  value={this.state.price}\n                  onChange={this.handleChange}\n                  type=\"number\"\n                  id=\"price\"\n                  name=\"price\"\n                  placeholder=\"Price\"\n                  required\n                />\n              </label>\n\n              <label htmlFor=\"description\">\n                Description\n                <textarea\n                  value={this.state.description}\n                  onChange={this.handleChange}\n                  name=\"description\"\n                  id=\"description\"\n                  placeholder=\"Enter a description\"\n                  required\n                />\n              </label>\n\n              <button type=\"submit\">Submit</button>\n            </fieldset>\n          </Form>\n        )}\n      </Mutation>\n    );\n  }\n}\n\nexport default CreateItem;\nexport {CREATE_ITEM_MUTATION};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAmBA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AARA;AACA;AAUA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AAGA;AAAA;AAAA;AACA;AACA;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AALA;AAAA;AAUA;AACA;AAFA;AACA;AAVA;AAOA;AAPA;AAAA;AACA;AADA;AAcA;AACA;AAEA;AACA;AAlBA;AACA;AAmBA;AACA;AACA;AAFA;AACA;AArBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AAyBA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAQA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAxEA;AA8EA;;;;AAjIA;AACA;AAmIA;;;;;A","sourceRoot":""}